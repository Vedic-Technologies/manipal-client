import React, { useState, useCallback, useRef, useEffect } from "react";
import Webcam from "react-webcam";

const videoConstraints = {
  width: 500,
  height: 500,
  facingMode: "user",
};

const retake = (
  <svg
    width="32px"
    height="32px"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M10 11.0006C10 10.4483 10.4477 10.0006 11 10.0006H13C13.5523 10.0006 14 10.4483 14 11.0006V13.0006C14 13.5529 13.5523 14.0006 13 14.0006H11C10.4477 14.0006 10 13.5529 10 13.0006V11.0006Z"
      stroke="#000000"
      stroke-width="1.5"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M4.25 12.0014C4.25042 12.4156 4.58654 12.751 5.00075 12.7506C5.41497 12.7502 5.75042 12.4141 5.75 11.9999L4.25 12.0014ZM6.144 8.1116L6.77414 8.51834L6.77451 8.51777L6.144 8.1116ZM9.19 5.5336L8.89458 4.84424L8.89364 4.84464L9.19 5.5336ZM13.111 5.1336L13.2635 4.39927L13.2611 4.39878L13.111 5.1336ZM16.585 7.0506L16.0451 7.57114L16.0456 7.57175L16.585 7.0506ZM18.29 10.0006L17.5692 10.2078C17.6626 10.5326 17.9617 10.7549 18.2996 10.7505C18.6376 10.7462 18.9309 10.5164 19.0159 10.1892L18.29 10.0006ZM19.7259 7.45725C19.8301 7.05635 19.5895 6.6469 19.1886 6.54271C18.7878 6.43853 18.3783 6.67906 18.2741 7.07996L19.7259 7.45725ZM19.75 11.9999C19.7496 11.5856 19.4135 11.2502 18.9993 11.2506C18.585 11.251 18.2496 11.5871 18.25 12.0014L19.75 11.9999ZM17.856 15.8896L17.2259 15.4829L17.2255 15.4834L17.856 15.8896ZM14.81 18.4676L15.1054 19.157L15.1064 19.1566L14.81 18.4676ZM10.889 18.8676L10.7365 19.6019L10.7389 19.6024L10.889 18.8676ZM7.415 16.9506L7.95495 16.4301L7.95436 16.4295L7.415 16.9506ZM5.71 14.0006L6.43082 13.7934C6.33745 13.4686 6.03835 13.2463 5.70039 13.2507C5.36244 13.255 5.06913 13.4848 4.98412 13.812L5.71 14.0006ZM4.27412 16.544C4.16993 16.9449 4.41046 17.3543 4.81136 17.4585C5.21225 17.5627 5.6217 17.3221 5.72589 16.9212L4.27412 16.544ZM5.75 11.9999C5.74877 10.7649 6.10441 9.55591 6.77414 8.51834L5.51387 7.70487C4.68737 8.98532 4.24848 10.4773 4.25 12.0014L5.75 11.9999ZM6.77451 8.51777C7.43011 7.50005 8.37429 6.70094 9.48637 6.22256L8.89364 4.84464C7.50751 5.4409 6.33066 6.43693 5.5135 7.70544L6.77451 8.51777ZM9.48543 6.22297C10.5808 5.75356 11.7933 5.62986 12.9609 5.86842L13.2611 4.39878C11.7942 4.09906 10.2708 4.25448 8.89458 4.84424L9.48543 6.22297ZM12.9585 5.86793C14.1352 6.11232 15.2109 6.7059 16.0451 7.57114L17.1249 6.53006C16.0814 5.44761 14.7357 4.70502 13.2635 4.39927L12.9585 5.86793ZM16.0456 7.57175C16.7615 8.31258 17.2846 9.21772 17.5692 10.2078L19.0108 9.79342C18.6585 8.5675 18.0107 7.44675 17.1244 6.52945L16.0456 7.57175ZM19.0159 10.1892L19.7259 7.45725L18.2741 7.07996L17.5641 9.81196L19.0159 10.1892ZM18.25 12.0014C18.2512 13.2363 17.8956 14.4453 17.2259 15.4829L18.4861 16.2963C19.3126 15.0159 19.7515 13.5239 19.75 11.9999L18.25 12.0014ZM17.2255 15.4834C16.5699 16.5012 15.6257 17.3003 14.5136 17.7786L15.1064 19.1566C16.4925 18.5603 17.6693 17.5643 18.4865 16.2958L17.2255 15.4834ZM14.5146 17.7782C13.4193 18.2476 12.2067 18.3713 11.0391 18.1328L10.7389 19.6024C12.2058 19.9021 13.7293 19.7467 15.1054 19.157L14.5146 17.7782ZM11.0415 18.1333C9.86478 17.8889 8.78909 17.2953 7.95495 16.4301L6.87506 17.4711C7.91861 18.5536 9.26434 19.2962 10.7365 19.6019L11.0415 18.1333ZM7.95436 16.4295C7.23854 15.6886 6.7154 14.7835 6.43082 13.7934L4.98919 14.2078C5.34156 15.4337 5.98931 16.5545 6.87565 17.4718L7.95436 16.4295ZM4.98412 13.812L4.27412 16.544L5.72589 16.9212L6.43589 14.1892L4.98412 13.812Z"
      fill="#000000"
    />
  </svg>
);

const Camera = ({ setImageFile, imageFile }) => {
  const [image, setImage] = useState("");
  const webcamRef = useRef(null);
  // const { setImageFile, imageFile } = props;

  const capture = useCallback(
    (e) => {
      e.preventDefault();
      const imageSrc = webcamRef.current.getScreenshot();
      setImage(imageSrc);
      setImageFile(imageSrc);
    },
    [setImageFile]
  );

  useEffect(() => {
    if (!imageFile) {
      setImage("");
    }
  }, [imageFile, setImage]);

  const retakeImage = () => {
    setImage("");
  };

  return (
    <div className="relative">
      {image === "" ? (
        <Webcam
          audio={false}
          height={500}
          width={500}
          ref={webcamRef}
          screenshotFormat="image/jpeg"
          videoConstraints={videoConstraints}
          className="rounded-lg outline-none"
        />
      ) : (
        <img src={image} alt="cam_pic" className="rounded-lg" />
      )}
      {image !== "" ? (
        <div
          onClick={retakeImage}
          className="webcam-btn text-2xl absolute bottom-1 right-1 text-slate-800 bg-gray-100 hover:bg-gray-200  mx-auto z-10 w-fit cursor-pointer px-2 py-1 mt-4 border rounded-md"
        >
          <span>{retake}</span>
        </div>
      ) : (
        <div
          onClick={capture}
          className="webcam-btn text-2xl absolute bottom-1 right-1 text-slate-800  bg-gray-100 hover:bg-gray-200  mx-auto z-10 w-fit cursor-pointer px-3 py-1 mt-4 border rounded-md"
        >
          <i class="fa-solid fa-camera"></i>
          {/* Capture */}
        </div>
      )}
    </div>
  );
};

export default Camera;
